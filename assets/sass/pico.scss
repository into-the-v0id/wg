@use "sass:color";
@use "sass:map";
@use "../../node_modules/@picocss/pico/scss/pico";
@use "../../node_modules/@picocss/pico/scss/colors" as *;

$danger-color: color.mix(
    $red-500,
    $slate-600,
    75%
);

:root {
    --pico-danger-color: #{$danger-color};
    --pico-danger-hover-color: #{color.scale($danger-color, $lightness: 10%)};
    --pico-danger-focus: #{rgba($danger-color, 0.375)};
}

td, th {
    padding: calc(var(--pico-spacing) / 2);
}

:is(button, [type="submit"], [type="button"], [type="reset"], [role="button"]) {
    &.link {
        --pico-button-hover-box-shadow: none;
        --pico-outline-width: 0;

        background: none;
        padding: 0;
        border: none;
        width: auto;
        transition: none;

        @extend [role="link"];
    }

    &.danger {
        --pico-background-color: var(--pico-danger-color);
        --pico-border-color: var(--pico-danger-color);
        --pico-color: var(--pico-danger-color);

        &:is([aria-current]:not([aria-current="false"]), :hover, :active, :focus) {
            --pico-background-color: var(--pico-danger-hover-color);
            --pico-border-color: var(--pico-danger-hover-color);
            --pico-color: var(--pico-danger-hover-color);
        }

        &:focus,
        &:is([aria-current]:not([aria-current="false"])):focus {
            --pico-box-shadow:
                var(--pico-button-hover-box-shadow, 0 0 0 rgba(0, 0, 0, 0)),
                0 0 0 var(--pico-outline-width) var(--pico-danger-focus);
        }
    }

    // Fix Outline button
    &.outline {
        background-color: transparent;

        &:is([aria-current]:not([aria-current="false"]), :hover, :active, :focus) {
            background-color: transparent;
        }
    }
}

[role="group"] {
    > label {
        --pico-border-color: var(--pico-form-element-border-color);
        --pico-color: var(--pico-form-element-color);
        padding: 0 var(--pico-form-element-spacing-horizontal);
        border: var(--pico-border-width) solid var(--pico-border-color);
        border-radius: var(--pico-border-radius);
        color: var(--pico-color);
        display: flex;
        align-items: center;
        justify-content: center;

        &:not(:first-child) {
            margin-left: calc(var(--pico-border-width) * -1);
        }

        &:not(:last-child) {
            margin-right: calc(var(--pico-border-width) * -1);
        }
    }

    + small {
        display: block;
        width: 100%;
        margin-top: calc(var(--pico-spacing) * -0.75);
        margin-bottom: var(--pico-spacing);
        color: var(--pico-muted-color);
    }
}

details {
    summary.arrow-left {
        &::after {
            margin-inline-start: 0;
            margin-inline-end: calc(var(--pico-spacing, 1rem) * 0.5);
            background-position: left center;
            float: left;
        }
    }
}

[dir="rtl"] {
    details {
        summary.arrow-left {
            &::after {
                float: right;
                background-position: right center;
            }
        }
    }
}
